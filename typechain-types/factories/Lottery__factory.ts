/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { Lottery, LotteryInterface } from "../Lottery";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [],
    name: "MIN_DEPOSIT",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getBalance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "pickWinner",
    outputs: [
      {
        internalType: "address",
        name: "player",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "players",
    outputs: [
      {
        internalType: "address payable",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "playersCount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "random",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b5061002d61002261009560201b60201c565b61009d60201b60201c565b6001339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550610161565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b610dd6806101706000396000f3fe60806040526004361061008a5760003560e01c80638da5cb5b116100595780638da5cb5b14610251578063a3f67d6d1461027c578063e1e158a5146102a7578063f2fde38b146102d2578063f71d96cb146102fb576101b4565b806312065fe0146101b95780635d495aea146101e45780635ec01e4d1461020f578063715018a61461023a576101b4565b366101b457670de0b6b3a764000034146100d9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016100d090610b24565b60405180910390fd5b6100e1610338565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141561014f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161014690610ac4565b60405180910390fd5b6001339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550005b600080fd5b3480156101c557600080fd5b506101ce610361565b6040516101db9190610b44565b60405180910390f35b3480156101f057600080fd5b506101f96103e5565b6040516102069190610a6e565b60405180910390f35b34801561021b57600080fd5b506102246105ce565b6040516102319190610b44565b60405180910390f35b34801561024657600080fd5b5061024f610608565b005b34801561025d57600080fd5b50610266610338565b6040516102739190610a6e565b60405180910390f35b34801561028857600080fd5b50610291610690565b60405161029e9190610b44565b60405180910390f35b3480156102b357600080fd5b506102bc61069d565b6040516102c99190610b44565b60405180910390f35b3480156102de57600080fd5b506102f960048036038101906102f491906108ec565b6106a9565b005b34801561030757600080fd5b50610322600480360381019061031d9190610915565b6107a1565b60405161032f9190610a89565b60405180910390f35b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b600061036b6107e0565b73ffffffffffffffffffffffffffffffffffffffff16610389610338565b73ffffffffffffffffffffffffffffffffffffffff16146103df576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103d690610b04565b60405180910390fd5b47905090565b6000600a6103f1610690565b101561046d576103ff610338565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461046c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161046390610ae4565b60405180910390fd5b5b6003600180549050101561048057600080fd5b600061048a6105ce565b90506000806104aa600a61049c610361565b6107e890919063ffffffff16565b90506000600180549050846104bf9190610bf9565b9050600181815481106104fb577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169250610530610338565b73ffffffffffffffffffffffffffffffffffffffff166108fc839081150290604051600060405180830381858888f19350505050158015610575573d6000803e3d6000fd5b508273ffffffffffffffffffffffffffffffffffffffff166108fc610598610361565b9081150290604051600060405180830381858888f193505050501580156105c3573d6000803e3d6000fd5b508294505050505090565b600044426001805490506040516020016105ea93929190610a31565b6040516020818303038152906040528051906020012060001c905090565b6106106107e0565b73ffffffffffffffffffffffffffffffffffffffff1661062e610338565b73ffffffffffffffffffffffffffffffffffffffff1614610684576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161067b90610b04565b60405180910390fd5b61068e60006107fe565b565b6000600180549050905090565b670de0b6b3a764000081565b6106b16107e0565b73ffffffffffffffffffffffffffffffffffffffff166106cf610338565b73ffffffffffffffffffffffffffffffffffffffff1614610725576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161071c90610b04565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415610795576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161078c90610aa4565b60405180910390fd5b61079e816107fe565b50565b600181815481106107b157600080fd5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600033905090565b600081836107f69190610b70565b905092915050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b6000813590506108d181610d72565b92915050565b6000813590506108e681610d89565b92915050565b6000602082840312156108fe57600080fd5b600061090c848285016108c2565b91505092915050565b60006020828403121561092757600080fd5b6000610935848285016108d7565b91505092915050565b61094781610bb3565b82525050565b61095681610ba1565b82525050565b6000610969602683610b5f565b915061097482610c59565b604082019050919050565b600061098c601983610b5f565b915061099782610ca8565b602082019050919050565b60006109af601683610b5f565b91506109ba82610cd1565b602082019050919050565b60006109d2602083610b5f565b91506109dd82610cfa565b602082019050919050565b60006109f5602183610b5f565b9150610a0082610d23565b604082019050919050565b610a1481610be5565b82525050565b610a2b610a2682610be5565b610bef565b82525050565b6000610a3d8286610a1a565b602082019150610a4d8285610a1a565b602082019150610a5d8284610a1a565b602082019150819050949350505050565b6000602082019050610a83600083018461094d565b92915050565b6000602082019050610a9e600083018461093e565b92915050565b60006020820190508181036000830152610abd8161095c565b9050919050565b60006020820190508181036000830152610add8161097f565b9050919050565b60006020820190508181036000830152610afd816109a2565b9050919050565b60006020820190508181036000830152610b1d816109c5565b9050919050565b60006020820190508181036000830152610b3d816109e8565b9050919050565b6000602082019050610b596000830184610a0b565b92915050565b600082825260208201905092915050565b6000610b7b82610be5565b9150610b8683610be5565b925082610b9657610b95610c2a565b5b828204905092915050565b6000610bac82610bc5565b9050919050565b6000610bbe82610bc5565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b6000819050919050565b6000610c0482610be5565b9150610c0f83610be5565b925082610c1f57610c1e610c2a565b5b828206905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b7f4f776e65722063616e6e6f742070617274696369706174652100000000000000600082015250565b7f596f7520617265206e6f7420746865204f776e65722100000000000000000000600082015250565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b7f4d696e696d756d20656e7472616e63652066656520697320312065746865727360008201527f2100000000000000000000000000000000000000000000000000000000000000602082015250565b610d7b81610ba1565b8114610d8657600080fd5b50565b610d9281610be5565b8114610d9d57600080fd5b5056fea2646970667358221220982dc24e9923db3a45386f1bcfaabb215942bcdc3040a3d94b456433a82b212064736f6c63430008040033";

type LotteryConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: LotteryConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Lottery__factory extends ContractFactory {
  constructor(...args: LotteryConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<Lottery> {
    return super.deploy(overrides || {}) as Promise<Lottery>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): Lottery {
    return super.attach(address) as Lottery;
  }
  connect(signer: Signer): Lottery__factory {
    return super.connect(signer) as Lottery__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): LotteryInterface {
    return new utils.Interface(_abi) as LotteryInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Lottery {
    return new Contract(address, _abi, signerOrProvider) as Lottery;
  }
}
